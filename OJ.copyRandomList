/**
 * Definition for a Node.
 * struct Node {
 *     int val;
 *     struct Node *next;
 *     struct Node *random;
 * };
 */
typedef struct Node Node;
struct Node* copyRandomList(struct Node* head) 
{
    if(head==NULL)
    return NULL;

    Node*cur=head;
    while(cur)
    {
        Node*copy=(Node*)malloc(sizeof(Node));
        copy->next=NULL;copy->random=NULL;
        copy->val=cur->val;

        Node* temp=cur->next;
        cur->next=copy;
        copy->next=temp;
        cur=temp;
    }
    cur=head;
    while(cur)
    {
        Node*copy=cur->next;
        if(cur->random)
            copy->random=cur->random->next;
        else
            copy->random=NULL;
        cur=cur->next->next;
    }
    cur=head;
    Node* Newhead=cur->next;
    while(cur)
    {
        Node*copy=cur->next;
        Node*temp=copy->next;

        cur->next=temp;
        if(temp)
            copy->next=temp->next;
        else
            copy->next=NULL;
        cur=temp;
    }
    return Newhead;
}
